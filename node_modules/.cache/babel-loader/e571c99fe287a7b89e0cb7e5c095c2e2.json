{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jackdermer/Developer/UI_UX/development/src/FilteredList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown } from 'react-bootstrap';\n\nclass FilteredList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectFilterSize = event => {\n      this.setState({\n        sector: event\n      });\n    };\n\n    this.matchesFilterSize = item => {\n      if (this.state.sector === \"All\") {\n        return true;\n      } else if (this.state.size === item.size) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.state = {\n      sector: \"All\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        children: \"Dropdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"All\",\n          onSelect: this.onSelelectFilterSize,\n          children: \"all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: \"Another action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: \"Something else\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FilteredList;","map":{"version":3,"sources":["/Users/jackdermer/Developer/UI_UX/development/src/FilteredList.js"],"names":["React","ReactDOM","Dropdown","FilteredList","Component","constructor","props","onSelectFilterSize","event","setState","sector","matchesFilterSize","item","state","size","render","onSelelectFilterSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,kBAPmB,GAOEC,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAe;AACXC,QAAAA,MAAM,EAAEF;AADG,OAAf;AAGH,KAXkB;;AAAA,SAanBG,iBAbmB,GAaCC,IAAI,IAAK;AAEzB,UAAG,KAAKC,KAAL,CAAWH,MAAX,KAAsB,KAAzB,EAAgC;AAC5B,eAAO,IAAP;AACH,OAFD,MAEO,IAAI,KAAKG,KAAL,CAAWC,IAAX,KAAoBF,IAAI,CAACE,IAA7B,EAAmC;AACtC,eAAO,IAAP;AACH,OAFM,MAEA;AACH,eAAO,KAAP;AACH;AACJ,KAtBkB;;AAEf,SAAKD,KAAL,GAAa;AACTH,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAmBDK,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,OAAO,EAAC,SAAzB;AAAmC,QAAA,EAAE,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,QAAD,CAAU,IAAV;AAAA,gCACA,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,KAAxB;AAA8B,UAAA,QAAQ,EAAE,KAAKC,oBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAxCsC;;AA2C3C,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown } from 'react-bootstrap';\n\nclass FilteredList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sector: \"All\"\n        };\n    }\n\n    onSelectFilterSize = event => {\n        this.setState ({\n            sector: event\n        })\n    };\n\n    matchesFilterSize = item =>  {\n\n        if(this.state.sector === \"All\") { \n            return true\n        } else if (this.state.size === item.size) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    render() {\n        return (\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Dropdown\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                <Dropdown.Item eventKey=\"All\" onSelect={this.onSelelectFilterSize}>all</Dropdown.Item>\n                <Dropdown.Item>Another action</Dropdown.Item>\n                <Dropdown.Item>Something else</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        )\n    }\n}\n\nexport default FilteredList;"]},"metadata":{},"sourceType":"module"}